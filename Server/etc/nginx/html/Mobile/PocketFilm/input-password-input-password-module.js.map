{"version":3,"sources":["webpack:///./src/app/input-password/input-password.module.ts","webpack:///./src/app/input-password/input-password.page.html","webpack:///./src/app/input-password/input-password.page.scss","webpack:///./src/app/input-password/input-password.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEa;AAE1D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sEAAiB;KAC7B;CACF,CAAC;AAWF;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QATnC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,sEAAiB,CAAC;SAClC,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBpC,mOAAmO,oPAAoP,mBAAmB,kiBAAkiB,YAAY,0F;;;;;;;;;;;ACAxhC,+DAA+D,2J;;;;;;;;;;;;;;;;;;;;;ACAb;AACe;AAEb;AACJ;AACa;AAO7D;IAUE,2BACS,OAAuB,EACvB,KAAmB,EACnB,WAA2B,EAC3B,WAA+B,EAC/B,MAAc;QAJd,YAAO,GAAP,OAAO,CAAgB;QACvB,UAAK,GAAL,KAAK,CAAc;QACnB,gBAAW,GAAX,WAAW,CAAgB;QAC3B,gBAAW,GAAX,WAAW,CAAoB;QAC/B,WAAM,GAAN,MAAM,CAAQ;QAXhB,aAAQ,GAAC;YACd,QAAQ,EAAC,EAAE;YACX,QAAQ,EAAC,EAAE;YACX,MAAM,EAAC,EAAE;SACV;IASD,CAAC;IAED,4CAAgB,GAAhB;QAAA,iBAKC;QAJC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,MAAc;YACpD,KAAI,CAAC,QAAQ,CAAC,QAAQ,GAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,KAAI,CAAC,QAAQ,CAAC,MAAM,GAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACtC,CAAC,CAAC;IACJ,CAAC;IAED,oCAAQ,GAAR;IACA,CAAC;IAED;;;;;;;OAOG;IAEH,oCAAQ,GAAR;QAAA,iBA0BC;QAzBC,IAAI,QAAQ,GAAC,IAAI,CAAC,QAAQ,CAAC;QAC3B,IAAI,eAAe,GAAC,IAAI,CAAC,eAAe,CAAC;QACzC,IAAI,OAAO,CAAC;QACZ,IAAI,GAAG,CAAC;QACR,IAAG,QAAQ,IAAE,EAAE,EAAC;YACd,OAAO,GAAC,QAAQ,CAAC;YACjB,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;SACvC;aAAK;YACJ,IAAG,QAAQ,IAAE,eAAe,EAAC;gBAC3B,OAAO,GAAC,YAAY,CAAC;gBACvB,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;aACrC;iBAAK;gBACJ,GAAG,GAAC,gBAAgB,CAAC;gBACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAC,IAAI,CAAC,QAAQ,CAAC;gBACrC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,EAAC,IAAI,CAAC,QAAQ,EAAC,UAAC,IAAI;oBAC7C,OAAO,GAAC,IAAI,CAAC,OAAO,CAAC;oBACrB,IAAG,IAAI,CAAC,IAAI,IAAE,CAAC,EAAC;wBACd,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;wBAC9C,KAAI,CAAC,KAAK,CAAC,0BAA0B,CAAC,OAAO,EAAC,KAAI,CAAC,CAAC;qBACrD;yBAAM;wBACL,KAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,OAAO,CAAC;qBACzC;gBACH,CAAC,CAAC;aACH;SACF;IACH,CAAC;IAhEU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,oHAAyC;;SAE1C,CAAC;+EAYkB,+DAAc;YAChB,2DAAY;YACN,8DAAc;YACd,wEAAkB;YACvB,sDAAM;OAfZ,iBAAiB,CAkE7B;IAAD,wBAAC;CAAA;AAlE6B","file":"input-password-input-password-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InputPasswordPage } from './input-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InputPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [InputPasswordPage]\n})\nexport class InputPasswordPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"danger\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n          </ion-buttons>\\n        <ion-title style=\\\"text-align: center;\\\">输入密码</ion-title>\\n      </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n    <div>\\n        <ion-list>\\n            <ion-item>\\n                <ion-label floating>用户名</ion-label>\\n                <ion-input type=\\\"text\\\" value=\\\"{{userInfo.username}}\\\" readonly=\\\"true\\\"></ion-input>\\n              </ion-item>\\n          <ion-item>\\n            <ion-label floating>密码</ion-label>\\n            <ion-input type=\\\"password\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\n          </ion-item>\\n          <ion-item>\\n            <ion-label floating>确认密码</ion-label>\\n            <ion-input type=\\\"password\\\" [(ngModel)]=\\\"confirmPassword\\\"></ion-input>\\n          </ion-item>\\n        </ion-list>\\n        <div padding>\\n          <ion-button ion-button color=\\\"danger\\\" block style=\\\"border-radius: .5rem;width: 100%;\\\" (click)=\\\"register()\\\">完成</ion-button>\\n        </div>\\n    </div>\\n\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2lucHV0LXBhc3N3b3JkL2lucHV0LXBhc3N3b3JkLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\nimport { StorageService } from '../storage.service';\nimport { ToolsService } from '../tools.service';\nimport { HttpServiceService } from '../http-service.service';\n\n@Component({\n  selector: 'app-input-password',\n  templateUrl: './input-password.page.html',\n  styleUrls: ['./input-password.page.scss'],\n})\nexport class InputPasswordPage implements OnInit {\n\n  public password;\n  public confirmPassword;\n  public userInfo={\n    username:'',\n    password:'',\n    mobile:''\n  }\n\n  constructor(\n    public storage: StorageService,\n    public tools: ToolsService,\n    public activeRoute: ActivatedRoute,\n    public httpService: HttpServiceService,\n    public router: Router\n  ) { \n  }\n\n  ionViewWillEnter(){\n    this.activeRoute.queryParams.subscribe((params: Params) => {\n      this.userInfo.username=params['username'];\n    this.userInfo.mobile=params['mobile'];\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * 注册\n   * \n   * 如果密码为空   提示密码不能为空\n   * 如果密码不为空\n   *    如果密码和确认密码不一致  提示两次输入的密码不一致\n   *    如果两次输入的密码一致   调用api接口进行注册，将当前用户信息存入缓存，给出提示信息，返回根页面\n   */\n\n  register(){\n    var password=this.password;\n    var confirmPassword=this.confirmPassword;\n    var message;\n    var api;\n    if(password==''){\n      message='密码不能为空';\n      this.tools.alertWithOkButton(message);\n    } else{\n      if(password!=confirmPassword){\n        message='两次输入的密码不一致';\n      this.tools.alertWithOkButton(message);\n      } else{\n        api='/user/register';\n        this.userInfo.password=this.password;\n        this.httpService.doPost(api,this.userInfo,(data)=>{\n          message=data.message;\n          if(data.code==0){\n            this.storage.set('user_id',data.userInfo._id);\n            this.tools.toastWithCallbackPopToRoot(message,this);\n          } else {\n            this.tools.toastWithoutCallback(message)\n          }\n        })\n      }\n    }\n  }\n\n}\n"],"sourceRoot":""}