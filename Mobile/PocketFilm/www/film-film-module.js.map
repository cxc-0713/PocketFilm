{"version":3,"sources":["webpack:///./src/app/film/film.module.ts","webpack:///./src/app/film/film.page.html","webpack:///./src/app/film/film.page.scss","webpack:///./src/app/film/film.page.ts"],"names":[],"mappings":"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","file":"film-film-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport {VgCoreModule} from 'videogular2/core';\nimport {VgControlsModule} from 'videogular2/controls';\nimport {VgOverlayPlayModule} from 'videogular2/overlay-play';\nimport {VgBufferingModule} from 'videogular2/buffering';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FilmPage } from './film.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FilmPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    VgCoreModule,\n    VgControlsModule,\n    VgOverlayPlayModule,\n    VgBufferingModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [FilmPage]\n})\nexport class FilmPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"danger\\\">\\n    <ion-title style=\\\"text-align: center;\\\">{{typeNameList[type]}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <!-- 下拉刷新 -->\\n  <ion-refresher (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content pullingIcon=\\\"arrow-dropdown\\\" pullingText=\\\"松开刷新\\\" refreshingSpinner=\\\"circles\\\"\\n      refreshingText=\\\"正在刷新\\\">\\n    </ion-refresher-content>\\n  </ion-refresher>\\n  <!-- 下拉刷新 -->\\n\\n  <!-- 搜索 -->\\n  <ion-searchbar (click)=\\\"goSearchMovie()\\\" placeholder=\\\"请输入影视或演员名称\\\"></ion-searchbar>\\n\\n  <ion-segment [(ngModel)]=\\\"type\\\">\\n    <ion-segment-button value=\\\"0\\\" (click)=\\\"changeMovieType(0)\\\">\\n      电影\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"1\\\" (click)=\\\"changeMovieType(1)\\\">\\n      电视剧\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"2\\\" (click)=\\\"changeMovieType(2)\\\">\\n      综艺\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"3\\\" (click)=\\\"changeMovieType(3)\\\">\\n      动漫\\n    </ion-segment-button>\\n  </ion-segment>\\n\\n  <!-- 推荐数据 -->\\n  <ion-item lines=\\\"none\\\">\\n    <ion-label slot=\\\"start\\\"><span>猜你喜欢</span></ion-label>\\n    <ion-label slot=\\\"end\\\" (click)=\\\"goMoreRecommendations()\\\"><span>更多</span></ion-label>\\n  </ion-item>\\n  <ion-grid>\\n    <ion-row *ngFor=\\\"let latestTop10Movie of recommendations\\\">\\n      <ion-col *ngFor=\\\"let latestTop10Movie2 of latestTop10Movie\\\" (click)=\\\"goMovieDetail((latestTop10Movie2._id))\\\">\\n        <div>\\n          <img src=\\\"{{latestTop10Movie2.src}}\\\"\\n            onerror=\\\"onerror=null;src='https://gxtstatic.com/xl/statics/img/nopic.gif'\\\" class=\\\"movie_img\\\">\\n        </div>\\n        <p class=\\\"movie-detail\\\" style=\\\"margin: 0px;\\\">{{latestTop10Movie2.name}}</p>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <!-- 最新影视 -->\\n  <ion-item lines=\\\"none\\\">\\n    <ion-label slot=\\\"start\\\"><span>最新{{typeNameList[type]}}</span></ion-label>\\n    <ion-label slot=\\\"end\\\" (click)=\\\"goMoreMovie(1)\\\"><span>更多</span></ion-label>\\n  </ion-item>\\n  <ion-grid>\\n    <ion-row *ngFor=\\\"let latestTop10Movie of latestTop10Movies\\\">\\n      <ion-col *ngFor=\\\"let latestTop10Movie2 of latestTop10Movie\\\" (click)=\\\"goMovieDetail((latestTop10Movie2._id))\\\">\\n        <div>\\n          <img src=\\\"{{latestTop10Movie2.src}}\\\"\\n            onerror=\\\"onerror=null;src='https://gxtstatic.com/xl/statics/img/nopic.gif'\\\" class=\\\"movie_img\\\">\\n        </div>\\n        <p class=\\\"movie-detail\\\" style=\\\"margin: 0px;\\\">{{latestTop10Movie2.name}}</p>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <!-- 最热影视 -->\\n  <ion-item lines=\\\"none\\\">\\n    <ion-label slot=\\\"start\\\"><span>最热{{typeNameList[type]}}</span></ion-label>\\n    <ion-label slot=\\\"end\\\" (click)=\\\"goMoreMovie(2)\\\"><span>更多</span></ion-label>\\n  </ion-item>\\n  <ion-grid>\\n    <ion-row *ngFor=\\\"let hottestTop10Movie of hottestTop10Movies\\\">\\n      <ion-col *ngFor=\\\"let hottestTop10Movie2 of hottestTop10Movie\\\" (click)=\\\"goMovieDetail((hottestTop10Movie2._id))\\\">\\n        <div>\\n          <img src=\\\"{{hottestTop10Movie2.src}}\\\"\\n            onerror=\\\"onerror=null;src='https://gxtstatic.com/xl/statics/img/nopic.gif'\\\" class=\\\"movie_img\\\">\\n        </div>\\n        <p class=\\\"movie-detail\\\" style=\\\"margin: 0px;\\\">{{hottestTop10Movie2.name}}</p>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbG0vZmlsbS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { StorageService } from '../storage.service';\nimport { ToolsService } from '../tools.service';\nimport { reject } from 'q';\n\n@Component({\n  selector: 'app-film',\n  templateUrl: './film.page.html',\n  styleUrls: ['./film.page.scss'],\n})\nexport class FilmPage implements OnInit {\n\n  // 推荐数据\n  public recommendations = []\n  // 最新排名前10的电影\n  public latestTop10Movies = []\n  // 最热排名前10的电影\n  public hottestTop10Movies = []\n\n  // 影视类型\n  public type = 0\n  // 影视类型名称列表\n  public typeNameList = ['电影', '电视剧', '综艺', '动漫'];\n  // 每行电影的数量\n  public col_size = 4\n  public source_index = 0;\n  public type_index = 0;\n  // 浏览类型\n  public browse_type = 'movie'\n\n  // 影视选中二级类型列表\n  public selectTypeList = null\n  // 当前页码\n  public pageIndex = 1\n  // 每页大小\n  public pageSize = 8\n  // 关键词\n  public keyWord = 'null'\n\n  constructor(\n    public storage: StorageService,\n    public tools: ToolsService,\n    public router: Router) {\n      // 清空缓存\n    this.clearCache()\n    // 获取影视列表\n    this.getMovies()\n    // 检查更新\n    this.tools.checkForUpdates(0)\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * 获取影视列表\n   */\n\n  getMovies() {\n    this.getRecommendations().then((data: any) => { this.recommendations = data })\n    this.getTop10Movies(this.type, 1).then((data: any) => { this.latestTop10Movies = data })\n    this.getTop10Movies(this.type, 2).then((data: any) => { this.hottestTop10Movies = data })\n  }\n\n  /**\n   * 获取推荐数据\n   */\n\n  getRecommendations() {\n    var promise = new Promise((resolve, error) => {\n      var recommendations = this.storage.get('movie-' + this.type + '-recommendations')\n      if (recommendations == null || recommendations.length == 0) {\n        // 本地没有推荐数据的缓存\n        this.tools.getRecommendationsApi(this.browse_type, this.typeNameList[this.type]).then((data: any) => {\n          // 截取电影名称的长度\n          var name_length = 5\n          var top10Movies = []\n          var latestTop10MoviesTemp = []\n          var latestTop10MoviesTemp2 = []\n          latestTop10MoviesTemp = data.data\n          latestTop10MoviesTemp.forEach((data: any) => {\n            var movie_name = data.name\n            if (movie_name.length > name_length) {\n              movie_name = movie_name.slice(0, name_length) + \"...\"\n            }\n            data.name = movie_name\n            latestTop10MoviesTemp2.push(data)\n          })\n          for (var i = 0; i < latestTop10MoviesTemp2.length;) {\n            top10Movies.push(latestTop10MoviesTemp2.splice(i, this.col_size))\n          }\n          // 将推荐数据缓存到本地\n          this.storage.set('movie-' + this.type + '-recommendations', top10Movies)\n          resolve(top10Movies)\n        })\n      } else {\n        // 本地有推荐数据的缓存\n        resolve(recommendations)\n      }\n    })\n    return promise\n  }\n\n  /**\n   * 获取最新排名前10的影视\n   * @param type 影视类型 0：电影 1：电视剧 2：综艺 3：动漫\n   */\n\n  getTop10Movies(type, sortType): any {\n    var promise = new Promise((resolve, reject) => {\n      var movies = this.storage.get('movie-' + type + '-' + sortType)\n      if (movies == null || movies.length == 0) {\n        // 本地没有相应的缓存\n        this.tools.getMovieListApi(type, this.selectTypeList, this.pageIndex, this.pageSize, sortType, this.keyWord).then((data: any) => {\n          if (data.code == 0) {\n            // 截取电影名称的长度\n            var name_length = 5\n            var top10Movies = []\n            var latestTop10MoviesTemp = []\n            var latestTop10MoviesTemp2 = []\n            latestTop10MoviesTemp = data.data\n            latestTop10MoviesTemp.forEach((data: any) => {\n              var movie_name = data.name\n              if (movie_name.length > name_length) {\n                movie_name = movie_name.slice(0, name_length) + \"...\"\n              }\n              data.name = movie_name\n              latestTop10MoviesTemp2.push(data)\n            })\n            for (var i = 0; i < latestTop10MoviesTemp2.length;) {\n              top10Movies.push(latestTop10MoviesTemp2.splice(i, this.col_size))\n            }\n            this.storage.set('movie-' + type + '-' + sortType, top10Movies)\n            resolve(top10Movies)\n          }\n        })\n      } else {\n        // 本地有相应的缓存\n        resolve(movies)\n      }\n    })\n    return promise\n  }\n\n  /**\n   * 跳转到影视详情页\n   * @param _id 影视_id\n   */\n\n  goMovieDetail(_id) {\n      //  跳转到影视详情页\n    this.router.navigate(['/movie-detail'], {\n      queryParams: {\n        _id: _id\n      }\n    })\n  }\n\n  /**\n   * 跳转到更多推荐页\n   */\n\n  goMoreRecommendations() {\n    this.router.navigate(['/more-recommend-movie'], {\n      queryParams: {\n        type: this.type\n      }\n    })\n  }\n\n  /**\n   * 跳转到更多影视页\n   * @param sortType  排序方式 0、1：发布日期 2：评分\n   */\n\n  goMoreMovie(sortType) {\n    this.router.navigate(['/more-movie'], {\n      queryParams: {\n        type: this.type,\n        sortType: sortType\n      }\n    })\n  }\n\n  /**\n   * 跳转到搜索影视页\n   */\n\n  goSearchMovie() {\n    this.router.navigate(['/search-movie'])\n  }\n\n  /**\n   * 下拉刷新\n   * @param event 事件对象\n   */\n\n  doRefresh(event) {\n    // 清空缓存\n    this.clearCache()\n    // 清空影视列表数据\n    this.recommendations = []\n    this.latestTop10Movies = []\n    this.hottestTop10Movies = []\n    // 修改当前页码\n    this.pageIndex = 1\n    // 获取影视列表\n    this.getMovies()\n    if (event) {\n      //告诉ionic 刷新数据完成\n      event.target.complete();\n    }\n  }\n\n  /**\n   * 改变影视类型\n   * @param i 一级分类序号\n   * @param j 二级分类序号\n   */\n\n  changeMovieType(type) {\n    // 清空影视列表数据\n    this.latestTop10Movies = []\n    this.hottestTop10Movies = []\n    // 修改当前页码为1\n    this.pageIndex = 1\n    // 修改影视类型\n    this.type = type\n    // 获取影视列表\n    this.getMovies()\n  }\n\n  /**\n   * 清空缓存\n   */\n\n  clearCache() {\n    // 清空对应的缓存数据\n    this.storage.set('movie-' + this.type + '-recommendations', [])\n    this.storage.set('movie-' + this.type + '-0', [])\n    this.storage.set('movie-' + this.type + '-1', [])\n  }\n\n}\n"],"sourceRoot":""}