{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"danger\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n          </ion-buttons>\\n        <ion-title style=\\\"text-align: center;\\\">登录</ion-title>\\n      </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n    <div>\\n        <ion-list>\\n          <ion-item>\\n            <ion-label floating>用户名</ion-label>\\n            <ion-input type=\\\"text\\\" [(ngModel)]=\\\"userInfo.username\\\" (blur)=\\\"validateUsername()\\\"></ion-input>\\n          </ion-item>\\n          <ion-item>\\n            <ion-label floating>密码</ion-label>\\n            <ion-input type=\\\"password\\\" [(ngModel)]=\\\"userInfo.password\\\"></ion-input>\\n          </ion-item>\\n          <a href=\\\"#\\\" style=\\\"color:red;float: right;\\\">找回密码</a>\\n        </ion-list>\\n        <div style=\\\"text-align: center;\\\">\\n          <ion-button ion-button color=\\\"danger\\\" block style=\\\"width: 9rem;border-radius: .5rem;\\\" (click)=\\\"login()\\\">登录</ion-button>\\n        </div>\\n        <div style=\\\"text-align: center;\\\">\\n          <ion-button ion-button color=\\\"danger\\\" block style=\\\"width: 9rem;border-radius: .5rem;\\\" (click)=goRegisterPage()>注册</ion-button>\\n        </div>\\n    </div>\\n\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\nimport { StorageService } from '../storage.service';\nimport { ToolsService } from '../tools.service';\nimport { HttpServiceService } from '../http-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  public history = '';\n  public userInfo = {\n    username: '',\n    password: ''\n  }\n\n  constructor(\n    public storage: StorageService,\n    public tools: ToolsService,\n    public activeRoute: ActivatedRoute,\n    public httpService: HttpServiceService,\n    public router: Router\n  ) { \n    this.activeRoute.queryParams.subscribe((params: Params) => {\n      this.history = params['history'];\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * 验证用户名\n   */\n\n  validateUsername(){\n    var api='/api/user/login/validate_user';\n    var message;\n    this.httpService.doPost(api,this.userInfo,(data)=>{\n      if(data.code!=0){\n        message=data.message;\n        this.tools.alertWithOkButton(message);\n      }\n    })\n  }\n\n /**\n  * 登录\n  * \n  * 如果用户名为空  提示用户名不能为空\n  * 如果用户名不能为空\n  *    如果密码为空  提示密码不能为空\n  *    如果密码不为空\n  *        如果登录成功  将当前用户信息存入缓存，返回根页面\n  *        如果登录失败  给出提示信息\n  */\n\n login() {\n   var username = this.userInfo.username;\n   var password = this.userInfo.password;\n   var message;\n   if (username == '') {\n     // 用户名为空，提示用户名不能为空\n     message = '用户名不能为空';\n     this.tools.toastWithoutCallback(message);\n   } else {\n     if (password == '') {\n       // 密码为空，提示密码不能为空\n       message = '密码不能为空';\n       this.tools.toastWithoutCallback(message);\n     } else {\n       this.tools.doLogin(this.userInfo).then((data:any)=>{\n         if (data.code == 0) {\n           // 登录成功，将当前用户信息存入缓存，返回根页面\n           this.storage.set('user_id', data.userInfo._id);\n           this.storage.set('user_name', data.userInfo.username);\n           message = data.message;\n           this.tools.toastWithCallbackPopToRoot(message, this);\n         } else {\n           // 登录失败，给出提示信息\n           message = data.message;\n           this.tools.toastWithoutCallback(message);\n         }\n       })\n     }\n   }\n }\n\n goRegisterPage() {\n  this.router.navigate(['/register'])\n }\n\n}\n"],"sourceRoot":""}